function testStr(arr, regexp) {
    arr.forEach(function(element) {
        let result = regexp.test(element);

        console.log(`
        Строка: '${element}'
        РВ: ${String(regexp)}
        Результат: ${result}`);
    });
};

let regexpPhone =/^\+\d \(\w{3}\) \w{3}(-\w{2}){2}/;
// 1. Вместо символьного класса \s лучше использовать фактический символ пробел " ", т.к. под символьный класс \s могут подойти не только пробелы, но и другие символы, которых не должно быть в номере телефона. Подробнее здесь https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes.
// 2. Символ + в начале номера телефона с указанием международного кода – является обязательным. Символ ? после символа + является квантификатором {0,1}, который включает необязательность символа +.
// 3. Якорь границы слова \b записывать не стоит, если в РВ указана эта граница в виде символов пробела, \s или дефиса и символов из класса \w.
// 4. Необходимо также установить проверку на окончание номера телефона на последнюю цифру в виде якоря окончания строки $.

let testsPhone = [' +7(123)456-78-90', '7123456-78-90', '8 123 456 78 90', '380904005060' , 
'asd +7 (123) 456-78-90 asd', '+7 (123) 456-78-90'];

testStr(testsPhone, regexpPhone);
console.log('\t\t------------------------------------------------');

let regexpEmail = /^\w+@((\w+\.)+.)\w+/;
// 1. Символ . в части (\b\w+.) представляет из себя абсолютно все символы, которых в адресе электронной почты быть не должно. Необходимо было заэкранировать точку, как это сделано далее.
// 2. Всё так же якорь на границу слова \b является излишним.
// Часть (\b\w+.)+)\. должна выглядеть как (\w+\.)+.

let testsEmail = ['email123@domen1.com', 'email123@domen1.domen2.com', 'email123@domen1.domen2.domen3.com',
'words123@domen1com', 'words123@domen1com. ', 'words123@ domen1com', '  words123@domen1com  '];

testStr(testsEmail, regexpEmail);